x-backend-common: &backend-common
  build:
    context: ./backend
    args:
      BACKEND_VOLUME_DIR: ${BACKEND_VOLUME_DIR:-/volume_data}
  volumes:
    - backend-data:${BACKEND_VOLUME_DIR:-/volume_data}
    - ../data:/app
    - ../spool:/app/spool
  env_file:
    - .env.backend
  secrets:
    - postgres_password_secret
  networks:
    - private
    - public

volumes:
    backend-data:
    runtime-data:
    static-data:
    dashboard-db-data:

networks:
    public:
    private:

secrets:
    postgres_password_secret:
        file: ./backend/runtime/secrets/postgres_password_secret

services:

  backend:
    <<: *backend-common
    container_name: dashboard_backend_service
    restart: always
    depends_on:
      - redis
      - dashboard_db
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
        mode: host

  ingester:
    <<: *backend-common
    container_name: dashboard_ingester_service
    # same image/build as backend; just different command
    command: >
      poetry run python3 manage.py monitor_submissions
      --spool-dir /app/spool
    restart: always
    depends_on:
      - redis
      - dashboard_db
    profiles: ["self-hosted"]

    dashboard_db:
        image: postgres:17
        env_file:
            - .env.db
        volumes:
            - dashboard-db-data:/var/lib/postgresql/data
        networks:
            - private
        ports:
            - "5434:5432"

    redis:
        image: redis:8.0-M04-alpine
        restart: always
        networks:
            - private
        ports:
            - 6379:6379

    dashboard:
        build:
            context: .
            dockerfile: ./dashboard/Dockerfile
        image: dashboard:latest
        volumes:
            - static-data:/data/static

    proxy:
        build: ./proxy
        restart: always
        depends_on:
            - backend
            - dashboard
        networks:
            - public
        volumes:
            - static-data:/data/static
        ports:
            - target: 80
              published: 80
              protocol: tcp
              mode: host
        env_file:
            - .env.proxy
