openapi: 3.0.3
info:
  title: KernelCI Dashboard API
  version: 1.0.0
  description: API for the KernelCI dashboard
paths:
  /api/build/{build_id}:
    get:
      operationId: build_retrieve
      parameters:
      - in: path
        name: build_id
        schema:
          type: string
        required: true
      tags:
      - build
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDetailsResponse'
          description: ''
  /api/build/{build_id}/tests:
    get:
      operationId: build_tests_retrieve
      parameters:
      - in: path
        name: build_id
        schema:
          type: string
        required: true
      tags:
      - build
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildTestsResponse'
          description: ''
  /api/hardware/{hardware_id}:
    post:
      operationId: hardware_create
      parameters:
      - in: path
        name: hardware_id
        schema:
          type: string
        required: true
      tags:
      - hardware
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareDetailsFullResponse'
          description: ''
  /api/hardware/{hardware_id}/boots:
    post:
      operationId: hardware_boots_create
      parameters:
      - in: path
        name: hardware_id
        schema:
          type: string
        required: true
      tags:
      - hardware
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareDetailsBootsResponse'
          description: ''
  /api/hardware/{hardware_id}/builds:
    post:
      operationId: hardware_builds_create
      parameters:
      - in: path
        name: hardware_id
        schema:
          type: string
        required: true
      tags:
      - hardware
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareDetailsBuildsResponse'
          description: ''
  /api/hardware/{hardware_id}/summary:
    post:
      operationId: hardware_summary_create
      parameters:
      - in: path
        name: hardware_id
        schema:
          type: string
        required: true
      tags:
      - hardware
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareDetailsSummaryResponse'
          description: ''
  /api/hardware/{hardware_id}/tests:
    post:
      operationId: hardware_tests_create
      parameters:
      - in: path
        name: hardware_id
        schema:
          type: string
        required: true
      tags:
      - hardware
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HardwareDetailsPostBody'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareDetailsTestsResponse'
          description: ''
  /api/issue/{issue_id}:
    get:
      operationId: issue_retrieve
      parameters:
      - in: path
        name: issue_id
        schema:
          type: string
        required: true
      tags:
      - issue
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueDetailsResponse'
          description: ''
  /api/issue/{issue_id}/builds:
    get:
      operationId: issue_builds_retrieve
      parameters:
      - in: path
        name: issue_id
        schema:
          type: string
        required: true
      tags:
      - issue
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueBuildsResponse'
          description: ''
  /api/issue/{issue_id}/tests:
    get:
      operationId: issue_tests_retrieve
      parameters:
      - in: path
        name: issue_id
        schema:
          type: string
        required: true
      tags:
      - issue
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTestsResponse'
          description: ''
  /api/log-downloader/:
    get:
      operationId: log_downloader_retrieve
      parameters:
      - in: query
        name: log_download_url
        schema:
          title: Log Download Url
          type: string
        required: true
      tags:
      - log-downloader
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogDownloaderResponse'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/test/{test_id}:
    get:
      operationId: test_retrieve
      parameters:
      - in: path
        name: test_id
        schema:
          type: string
        required: true
      tags:
      - test
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDetailsResponse'
          description: ''
  /api/tree/:
    get:
      operationId: tree_list
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tree'
          description: ''
  /api/tree/{commit_hash}/boots:
    get:
      operationId: tree_boots_retrieve
      parameters:
      - in: path
        name: commit_hash
        schema:
          type: string
        required: true
      - in: query
        name: git_branch
        schema:
          title: Git Branch
          type: string
        required: true
      - in: query
        name: git_url
        schema:
          title: Git Url
          type: string
        required: true
      - in: query
        name: origin
        schema:
          default: maestro
          title: Origin
          type: string
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonDetailsBootsResponse'
          description: ''
  /api/tree/{commit_hash}/builds:
    get:
      operationId: tree_builds_retrieve
      parameters:
      - in: path
        name: commit_hash
        schema:
          type: string
        required: true
      - in: query
        name: git_branch
        schema:
          title: Git Branch
          type: string
        required: true
      - in: query
        name: git_url
        schema:
          title: Git Url
          type: string
        required: true
      - in: query
        name: origin
        schema:
          default: maestro
          title: Origin
          type: string
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreeDetailsBuildsResponse'
          description: ''
  /api/tree/{commit_hash}/commits:
    get:
      operationId: tree_commits_retrieve
      parameters:
      - in: path
        name: commit_hash
        schema:
          type: string
        required: true
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/tree/{commit_hash}/summary:
    get:
      operationId: tree_summary_retrieve
      parameters:
      - in: path
        name: commit_hash
        schema:
          type: string
        required: true
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryResponse'
          description: ''
  /api/tree/{commit_hash}/tests:
    get:
      operationId: tree_tests_retrieve
      parameters:
      - in: path
        name: commit_hash
        schema:
          type: string
        required: true
      - in: query
        name: git_branch
        schema:
          title: Git Branch
          type: string
        required: true
      - in: query
        name: git_url
        schema:
          title: Git Url
          type: string
        required: true
      - in: query
        name: origin
        schema:
          default: maestro
          title: Origin
          type: string
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonDetailsTestsResponse'
          description: ''
components:
  schemas:
    BuildArchitectures:
      properties:
        valid:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Valid
        invalid:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Invalid
        'null':
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: 'Null'
        compilers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: []
          title: Compilers
      title: BuildArchitectures
      type: object
    BuildDetailsResponse:
      properties:
        id:
          title: Id
          type: string
        architecture:
          anyOf:
          - type: string
          - type: 'null'
          title: Architecture
        config_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Config Name
        misc:
          anyOf:
          - type: object
          - type: 'null'
          title: Misc
        config_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Config Url
        compiler:
          anyOf:
          - type: string
          - type: 'null'
          title: Compiler
        valid:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Valid
        duration:
          anyOf:
          - type: integer
          - type: number
          - type: 'null'
          title: Duration
        log_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Log Url
        start_time:
          anyOf:
          - format: date-time
            type: string
          - type: string
          - type: 'null'
          title: Start Time
        git_repository_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Url
        git_repository_branch:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Branch
        checkout_id:
          $ref: '#/components/schemas/Checkout__Id'
        command:
          $ref: '#/components/schemas/Build__Command'
        comment:
          $ref: '#/components/schemas/Build__Comment'
        tree_name:
          $ref: '#/components/schemas/Checkout__TreeName'
        git_commit_hash:
          $ref: '#/components/schemas/Checkout__GitCommitHash'
        git_commit_name:
          $ref: '#/components/schemas/Checkout__GitCommitName'
        git_commit_tags:
          $ref: '#/components/schemas/Checkout__GitCommitTags'
        origin:
          $ref: '#/components/schemas/Origin'
        log_excerpt:
          $ref: '#/components/schemas/Build__LogExcerpt'
        input_files:
          $ref: '#/components/schemas/Build__InputFiles'
        output_files:
          $ref: '#/components/schemas/Build__OutputFiles'
      required:
      - id
      - architecture
      - config_name
      - misc
      - config_url
      - compiler
      - valid
      - duration
      - log_url
      - start_time
      - git_repository_url
      - git_repository_branch
      - checkout_id
      - command
      - comment
      - tree_name
      - git_commit_hash
      - git_commit_name
      - git_commit_tags
      - origin
      - log_excerpt
      - input_files
      - output_files
      title: BuildDetailsResponse
      type: object
    BuildHistoryItem:
      properties:
        id:
          title: Id
          type: string
        architecture:
          anyOf:
          - type: string
          - type: 'null'
          title: Architecture
        config_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Config Name
        misc:
          anyOf:
          - type: object
          - type: 'null'
          title: Misc
        config_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Config Url
        compiler:
          anyOf:
          - type: string
          - type: 'null'
          title: Compiler
        valid:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Valid
        duration:
          anyOf:
          - type: integer
          - type: number
          - type: 'null'
          title: Duration
        log_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Log Url
        start_time:
          anyOf:
          - format: date-time
            type: string
          - type: string
          - type: 'null'
          title: Start Time
        git_repository_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Url
        git_repository_branch:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Branch
      required:
      - id
      - architecture
      - config_name
      - misc
      - config_url
      - compiler
      - valid
      - duration
      - log_url
      - start_time
      - git_repository_url
      - git_repository_branch
      title: BuildHistoryItem
      type: object
    BuildStatusCount:
      properties:
        valid:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Valid
        invalid:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Invalid
        'null':
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: 'Null'
      title: BuildStatusCount
      type: object
    BuildSummary:
      properties:
        status:
          $ref: '#/components/schemas/BuildStatusCount'
        architectures:
          additionalProperties:
            $ref: '#/components/schemas/BuildArchitectures'
          title: Architectures
          type: object
        configs:
          additionalProperties:
            $ref: '#/components/schemas/BuildStatusCount'
          title: Configs
          type: object
        issues:
          items:
            $ref: '#/components/schemas/Issue'
          title: Issues
          type: array
        unknown_issues:
          title: Unknown Issues
          type: integer
      required:
      - status
      - architectures
      - configs
      - issues
      - unknown_issues
      title: BuildSummary
      type: object
    BuildTestItem:
      properties:
        id:
          $ref: '#/components/schemas/Test__Id'
        status:
          $ref: '#/components/schemas/Test__Status'
        duration:
          $ref: '#/components/schemas/Test__Duration'
        path:
          $ref: '#/components/schemas/Test__Path'
        start_time:
          $ref: '#/components/schemas/Test__StartTime'
        environment_compatible:
          $ref: '#/components/schemas/Test__EnvironmentCompatible'
        environment_misc:
          $ref: '#/components/schemas/Test__EnvironmentMisc'
      required:
      - id
      - status
      - duration
      - path
      - start_time
      - environment_compatible
      - environment_misc
      title: BuildTestItem
      type: object
    BuildTestsResponse:
      items:
        $ref: '#/components/schemas/BuildTestItem'
      title: BuildTestsResponse
      type: array
    Build__Architecture:
      anyOf:
      - type: string
      - type: 'null'
    Build__Command:
      anyOf:
      - type: string
      - type: 'null'
    Build__Comment:
      anyOf:
      - type: string
      - type: 'null'
    Build__Compiler:
      anyOf:
      - type: string
      - type: 'null'
    Build__ConfigName:
      anyOf:
      - type: string
      - type: 'null'
    Build__Duration:
      anyOf:
      - type: number
      - type: 'null'
    Build__Id:
      type: string
    Build__InputFiles:
      anyOf:
      - type: object
      - items:
          type: object
        type: array
      - type: 'null'
    Build__LogExcerpt:
      anyOf:
      - type: string
      - type: 'null'
    Build__LogUrl:
      anyOf:
      - type: string
      - type: 'null'
    Build__OutputFiles:
      anyOf:
      - type: object
      - items:
          type: object
        type: array
      - type: 'null'
    Build__StartTime:
      anyOf:
      - format: date-time
        type: string
      - type: 'null'
    Build__Valid:
      anyOf:
      - type: boolean
      - type: 'null'
    Checkout__GitCommitHash:
      anyOf:
      - type: string
      - type: 'null'
    Checkout__GitCommitName:
      anyOf:
      - type: string
      - type: 'null'
    Checkout__GitCommitTags:
      anyOf:
      - items:
          type: string
        type: array
      - type: 'null'
    Checkout__GitRepositoryBranch:
      anyOf:
      - type: string
      - type: 'null'
    Checkout__GitRepositoryUrl:
      anyOf:
      - type: string
      - type: 'null'
    Checkout__Id:
      type: string
    Checkout__TreeName:
      anyOf:
      - type: string
      - type: 'null'
    CommonDetailsBootsResponse:
      properties:
        boots:
          items:
            $ref: '#/components/schemas/TestHistoryItem'
          title: Boots
          type: array
      required:
      - boots
      title: CommonDetailsBootsResponse
      type: object
    CommonDetailsTestsResponse:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/TestHistoryItem'
          title: Tests
          type: array
      required:
      - tests
      title: CommonDetailsTestsResponse
      type: object
    DatabaseStatusValues:
      enum:
      - FAIL
      - PASS
      - SKIP
      - ERROR
      - MISS
      - DONE
      type: string
    DetailsFilters:
      properties:
        all:
          $ref: '#/components/schemas/GlobalFilters'
        builds:
          $ref: '#/components/schemas/LocalFilters'
        boots:
          $ref: '#/components/schemas/LocalFilters'
        tests:
          $ref: '#/components/schemas/LocalFilters'
      required:
      - all
      - builds
      - boots
      - tests
      title: DetailsFilters
      type: object
    EnvironmentMisc:
      properties:
        platform:
          title: Platform
          type: string
      required:
      - platform
      title: EnvironmentMisc
      type: object
    GlobalFilters:
      properties:
        configs:
          items:
            type: string
          title: Configs
          type: array
        architectures:
          items:
            type: string
          title: Architectures
          type: array
        compilers:
          items:
            type: string
          title: Compilers
          type: array
      required:
      - configs
      - architectures
      - compilers
      title: GlobalFilters
      type: object
    HardwareBuildHistoryItem:
      properties:
        id:
          title: Id
          type: string
        architecture:
          anyOf:
          - type: string
          - type: 'null'
          title: Architecture
        config_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Config Name
        misc:
          anyOf:
          - type: object
          - type: 'null'
          title: Misc
        config_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Config Url
        compiler:
          anyOf:
          - type: string
          - type: 'null'
          title: Compiler
        valid:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Valid
        duration:
          anyOf:
          - type: integer
          - type: number
          - type: 'null'
          title: Duration
        log_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Log Url
        start_time:
          anyOf:
          - format: date-time
            type: string
          - type: string
          - type: 'null'
          title: Start Time
        git_repository_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Url
        git_repository_branch:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Branch
        tree_name:
          anyOf:
          - $ref: '#/components/schemas/Checkout__TreeName'
          - type: 'null'
        issue_id:
          anyOf:
          - $ref: '#/components/schemas/Issue__Id'
          - type: 'null'
        issue_version:
          anyOf:
          - $ref: '#/components/schemas/Issue__Version'
          - type: 'null'
      required:
      - id
      - architecture
      - config_name
      - misc
      - config_url
      - compiler
      - valid
      - duration
      - log_url
      - start_time
      - git_repository_url
      - git_repository_branch
      - tree_name
      - issue_id
      - issue_version
      title: HardwareBuildHistoryItem
      type: object
    HardwareCommon:
      properties:
        trees:
          items:
            $ref: '#/components/schemas/Tree'
          title: Trees
          type: array
        compatibles:
          items:
            type: string
          title: Compatibles
          type: array
      required:
      - trees
      - compatibles
      title: HardwareCommon
      type: object
    HardwareDetailsBootsResponse:
      properties:
        boots:
          items:
            $ref: '#/components/schemas/HardwareTestHistoryItem'
          title: Boots
          type: array
      required:
      - boots
      title: HardwareDetailsBootsResponse
      type: object
    HardwareDetailsBuildsResponse:
      properties:
        builds:
          items:
            $ref: '#/components/schemas/HardwareBuildHistoryItem'
          title: Builds
          type: array
      required:
      - builds
      title: HardwareDetailsBuildsResponse
      type: object
    HardwareDetailsFilters:
      properties:
        all:
          $ref: '#/components/schemas/GlobalFilters'
        builds:
          $ref: '#/components/schemas/LocalFilters'
        boots:
          $ref: '#/components/schemas/HardwareTestLocalFilters'
        tests:
          $ref: '#/components/schemas/HardwareTestLocalFilters'
      required:
      - all
      - builds
      - boots
      - tests
      title: HardwareDetailsFilters
      type: object
    HardwareDetailsFullResponse:
      properties:
        builds:
          items:
            $ref: '#/components/schemas/HardwareBuildHistoryItem'
          title: Builds
          type: array
        boots:
          items:
            $ref: '#/components/schemas/HardwareTestHistoryItem'
          title: Boots
          type: array
        tests:
          items:
            $ref: '#/components/schemas/HardwareTestHistoryItem'
          title: Tests
          type: array
        summary:
          $ref: '#/components/schemas/Summary'
        filters:
          $ref: '#/components/schemas/HardwareDetailsFilters'
        common:
          $ref: '#/components/schemas/HardwareCommon'
      required:
      - builds
      - boots
      - tests
      - summary
      - filters
      - common
      title: HardwareDetailsFullResponse
      type: object
    HardwareDetailsPostBody:
      properties:
        origin:
          default: maestro
          title: Origin
          type: string
        startTimestampInSeconds:
          anyOf:
          - type: string
          - type: integer
          title: Starttimestampinseconds
        endTimestampInSeconds:
          anyOf:
          - type: string
          - type: integer
          title: Endtimestampinseconds
        selectedCommits:
          additionalProperties:
            type: string
          title: Selectedcommits
          type: object
        filter:
          anyOf:
          - type: object
          - type: 'null'
          title: Filter
      required:
      - startTimestampInSeconds
      - endTimestampInSeconds
      - selectedCommits
      - filter
      title: HardwareDetailsPostBody
      type: object
    HardwareDetailsSummaryResponse:
      properties:
        summary:
          $ref: '#/components/schemas/Summary'
        filters:
          $ref: '#/components/schemas/HardwareDetailsFilters'
        common:
          $ref: '#/components/schemas/HardwareCommon'
      required:
      - summary
      - filters
      - common
      title: HardwareDetailsSummaryResponse
      type: object
    HardwareDetailsTestsResponse:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/HardwareTestHistoryItem'
          title: Tests
          type: array
      required:
      - tests
      title: HardwareDetailsTestsResponse
      type: object
    HardwareTestHistoryItem:
      properties:
        id:
          title: Id
          type: string
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
        duration:
          anyOf:
          - type: integer
          - type: number
          - type: 'null'
          title: Duration
        path:
          anyOf:
          - type: string
          - type: 'null'
          title: Path
        start_time:
          anyOf:
          - format: date-time
            type: string
          - type: string
          - type: 'null'
          title: Start Time
        environment_compatible:
          anyOf:
          - type: string
          - items:
              type: string
            type: array
          - type: 'null'
          title: Environment Compatible
        config:
          anyOf:
          - type: string
          - type: 'null'
          title: Config
        log_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Log Url
        architecture:
          anyOf:
          - type: string
          - type: 'null'
          title: Architecture
        compiler:
          anyOf:
          - type: string
          - type: 'null'
          title: Compiler
        environment_misc:
          anyOf:
          - $ref: '#/components/schemas/EnvironmentMisc'
          - type: 'null'
        tree_name:
          $ref: '#/components/schemas/Checkout__TreeName'
        git_repository_branch:
          $ref: '#/components/schemas/Checkout__GitRepositoryBranch'
      required:
      - id
      - status
      - duration
      - path
      - start_time
      - environment_compatible
      - config
      - log_url
      - architecture
      - compiler
      - environment_misc
      - tree_name
      - git_repository_branch
      title: HardwareTestHistoryItem
      type: object
    HardwareTestLocalFilters:
      properties:
        issues:
          items:
            maxItems: 2
            minItems: 2
            prefixItems:
            - type: string
            - anyOf:
              - type: integer
              - type: 'null'
            type: array
          title: Issues
          type: array
        platforms:
          items:
            type: string
          title: Platforms
          type: array
      required:
      - issues
      - platforms
      title: HardwareTestLocalFilters
      type: object
    IncidentInfo:
      properties:
        incidentsCount:
          title: Incidentscount
          type: integer
      required:
      - incidentsCount
      title: IncidentInfo
      type: object
    Issue:
      properties:
        id:
          title: Id
          type: string
        version:
          title: Version
          type: integer
        comment:
          anyOf:
          - type: string
          - type: 'null'
          title: Comment
        report_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Report Url
        incidents_info:
          $ref: '#/components/schemas/IncidentInfo'
      required:
      - id
      - version
      - comment
      - report_url
      - incidents_info
      title: Issue
      type: object
    IssueBuildItem:
      properties:
        build__id:
          $ref: '#/components/schemas/Build__Id'
        build__architecture:
          $ref: '#/components/schemas/Build__Architecture'
        build__config_name:
          $ref: '#/components/schemas/Build__ConfigName'
        build__valid:
          $ref: '#/components/schemas/Build__Valid'
        build__start_time:
          $ref: '#/components/schemas/Build__StartTime'
        build__duration:
          $ref: '#/components/schemas/Build__Duration'
        build__compiler:
          $ref: '#/components/schemas/Build__Compiler'
        build__log_url:
          $ref: '#/components/schemas/Build__LogUrl'
        build__checkout__tree_name:
          $ref: '#/components/schemas/Checkout__TreeName'
        build__checkout__git_repository_branch:
          $ref: '#/components/schemas/Checkout__GitRepositoryBranch'
      required:
      - build__id
      - build__architecture
      - build__config_name
      - build__valid
      - build__start_time
      - build__duration
      - build__compiler
      - build__log_url
      - build__checkout__tree_name
      - build__checkout__git_repository_branch
      title: IssueBuildItem
      type: object
    IssueBuildsResponse:
      items:
        $ref: '#/components/schemas/IssueBuildItem'
      title: IssueBuildsResponse
      type: array
    IssueDetailsResponse:
      properties:
        field_timestamp:
          $ref: '#/components/schemas/Timestamp'
        id:
          $ref: '#/components/schemas/Issue__Id'
        version:
          $ref: '#/components/schemas/Issue__Version'
        origin:
          $ref: '#/components/schemas/Origin'
        report_url:
          $ref: '#/components/schemas/Issue__ReportUrl'
        report_subject:
          $ref: '#/components/schemas/Issue__ReportSubject'
        culprit_code:
          $ref: '#/components/schemas/Issue__CulpritCode'
        culprit_tool:
          $ref: '#/components/schemas/Issue__CulpritTool'
        culprit_harness:
          $ref: '#/components/schemas/Issue__CulpritHarness'
        comment:
          $ref: '#/components/schemas/Issue__Comment'
        misc:
          $ref: '#/components/schemas/Issue__Misc'
      required:
      - field_timestamp
      - id
      - version
      - origin
      - report_url
      - report_subject
      - culprit_code
      - culprit_tool
      - culprit_harness
      - comment
      - misc
      title: IssueDetailsResponse
      type: object
    IssueTestItem:
      properties:
        test__id:
          $ref: '#/components/schemas/Test__Id'
        test__status:
          $ref: '#/components/schemas/Test__Status'
        test__duration:
          $ref: '#/components/schemas/Test__Duration'
        test__path:
          $ref: '#/components/schemas/Test__Path'
        test__start_time:
          $ref: '#/components/schemas/Test__StartTime'
        test__environment_compatible:
          $ref: '#/components/schemas/Test__EnvironmentCompatible'
        test__environment_misc:
          $ref: '#/components/schemas/Test__EnvironmentMisc'
        test__build__checkout__tree_name:
          $ref: '#/components/schemas/Checkout__TreeName'
        test__build__checkout__git_repository_branch:
          $ref: '#/components/schemas/Checkout__GitRepositoryBranch'
      required:
      - test__id
      - test__status
      - test__duration
      - test__path
      - test__start_time
      - test__environment_compatible
      - test__environment_misc
      - test__build__checkout__tree_name
      - test__build__checkout__git_repository_branch
      title: IssueTestItem
      type: object
    IssueTestsResponse:
      items:
        $ref: '#/components/schemas/IssueTestItem'
      title: IssueTestsResponse
      type: array
    Issue__Comment:
      anyOf:
      - type: string
      - type: 'null'
    Issue__CulpritCode:
      anyOf:
      - type: boolean
      - type: 'null'
    Issue__CulpritHarness:
      anyOf:
      - type: boolean
      - type: 'null'
    Issue__CulpritTool:
      anyOf:
      - type: boolean
      - type: 'null'
    Issue__Id:
      type: string
    Issue__Misc:
      anyOf:
      - type: object
      - items:
          type: object
        type: array
      - type: 'null'
    Issue__ReportSubject:
      anyOf:
      - type: string
      - type: 'null'
    Issue__ReportUrl:
      anyOf:
      - type: string
      - type: 'null'
    Issue__Version:
      type: integer
    LocalFilters:
      properties:
        issues:
          items:
            maxItems: 2
            minItems: 2
            prefixItems:
            - type: string
            - anyOf:
              - type: integer
              - type: 'null'
            type: array
          title: Issues
          type: array
      required:
      - issues
      title: LocalFilters
      type: object
    LogData:
      properties:
        specific_log_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Specific Log Url
        file_name:
          anyOf:
          - type: string
          - type: 'null'
          title: File Name
        file_size:
          anyOf:
          - type: string
          - type: 'null'
          title: File Size
        date:
          anyOf:
          - type: string
          - type: 'null'
          title: Date
      required:
      - specific_log_url
      - file_name
      - file_size
      - date
      title: LogData
      type: object
    LogDownloaderResponse:
      properties:
        log_files:
          items:
            $ref: '#/components/schemas/LogData'
          title: Log Files
          type: array
      required:
      - log_files
      title: LogDownloaderResponse
      type: object
    Origin:
      type: string
    Summary:
      properties:
        builds:
          $ref: '#/components/schemas/BuildSummary'
        boots:
          $ref: '#/components/schemas/TestSummary'
        tests:
          $ref: '#/components/schemas/TestSummary'
      required:
      - builds
      - boots
      - tests
      title: Summary
      type: object
    SummaryResponse:
      properties:
        common:
          $ref: '#/components/schemas/TreeCommon'
        summary:
          $ref: '#/components/schemas/Summary'
        filters:
          $ref: '#/components/schemas/DetailsFilters'
      required:
      - common
      - summary
      - filters
      title: SummaryResponse
      type: object
    TestArchSummaryItem:
      properties:
        arch:
          title: Arch
          type: string
        compiler:
          title: Compiler
          type: string
        status:
          $ref: '#/components/schemas/TestStatusCount'
      required:
      - arch
      - compiler
      - status
      title: TestArchSummaryItem
      type: object
    TestDetailsResponse:
      properties:
        id:
          $ref: '#/components/schemas/Test__Id'
        build_id:
          $ref: '#/components/schemas/Build__Id'
        status:
          $ref: '#/components/schemas/Test__Status'
        path:
          $ref: '#/components/schemas/Test__Path'
        log_excerpt:
          $ref: '#/components/schemas/Test__LogExcerpt'
        log_url:
          $ref: '#/components/schemas/Test__LogUrl'
        misc:
          $ref: '#/components/schemas/Test__Misc'
        environment_misc:
          $ref: '#/components/schemas/Test__EnvironmentMisc'
        start_time:
          $ref: '#/components/schemas/Test__StartTime'
        environment_compatible:
          $ref: '#/components/schemas/Test__EnvironmentCompatible'
        output_files:
          $ref: '#/components/schemas/Test__OutputFiles'
        compiler:
          $ref: '#/components/schemas/Build__Compiler'
        architecture:
          $ref: '#/components/schemas/Build__Architecture'
        config_name:
          $ref: '#/components/schemas/Build__ConfigName'
        git_commit_hash:
          $ref: '#/components/schemas/Checkout__GitCommitHash'
        git_repository_branch:
          $ref: '#/components/schemas/Checkout__GitRepositoryBranch'
        git_repository_url:
          $ref: '#/components/schemas/Checkout__GitRepositoryUrl'
        git_commit_tags:
          $ref: '#/components/schemas/Checkout__GitCommitTags'
        tree_name:
          $ref: '#/components/schemas/Checkout__TreeName'
      required:
      - id
      - build_id
      - status
      - path
      - log_excerpt
      - log_url
      - misc
      - environment_misc
      - start_time
      - environment_compatible
      - output_files
      - compiler
      - architecture
      - config_name
      - git_commit_hash
      - git_repository_branch
      - git_repository_url
      - git_commit_tags
      - tree_name
      title: TestDetailsResponse
      type: object
    TestHistoryItem:
      properties:
        id:
          title: Id
          type: string
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
        duration:
          anyOf:
          - type: integer
          - type: number
          - type: 'null'
          title: Duration
        path:
          anyOf:
          - type: string
          - type: 'null'
          title: Path
        start_time:
          anyOf:
          - format: date-time
            type: string
          - type: string
          - type: 'null'
          title: Start Time
        environment_compatible:
          anyOf:
          - type: string
          - items:
              type: string
            type: array
          - type: 'null'
          title: Environment Compatible
        config:
          anyOf:
          - type: string
          - type: 'null'
          title: Config
        log_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Log Url
        architecture:
          anyOf:
          - type: string
          - type: 'null'
          title: Architecture
        compiler:
          anyOf:
          - type: string
          - type: 'null'
          title: Compiler
        environment_misc:
          anyOf:
          - $ref: '#/components/schemas/EnvironmentMisc'
          - type: 'null'
      required:
      - id
      - status
      - duration
      - path
      - start_time
      - environment_compatible
      - config
      - log_url
      - architecture
      - compiler
      - environment_misc
      title: TestHistoryItem
      type: object
    TestStatusCount:
      properties:
        PASS:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Pass
        ERROR:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Error
        FAIL:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Fail
        SKIP:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Skip
        MISS:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Miss
        'NULL':
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: 'Null'
      title: TestStatusCount
      type: object
    TestSummary:
      properties:
        status:
          $ref: '#/components/schemas/TestStatusCount'
        architectures:
          items:
            $ref: '#/components/schemas/TestArchSummaryItem'
          title: Architectures
          type: array
        configs:
          additionalProperties:
            $ref: '#/components/schemas/TestStatusCount'
          title: Configs
          type: object
        issues:
          items:
            $ref: '#/components/schemas/Issue'
          title: Issues
          type: array
        unknown_issues:
          title: Unknown Issues
          type: integer
        fail_reasons:
          additionalProperties:
            type: integer
          title: Fail Reasons
          type: object
        failed_platforms:
          items: {}
          title: Failed Platforms
          type: array
          uniqueItems: true
        environment_compatible:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Environment Compatible
        environment_misc:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Environment Misc
        platforms:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/TestStatusCount'
            type: object
          - type: 'null'
          default: null
          title: Platforms
      required:
      - status
      - architectures
      - configs
      - issues
      - unknown_issues
      - fail_reasons
      - failed_platforms
      title: TestSummary
      type: object
    Test__Duration:
      anyOf:
      - type: number
      - type: 'null'
    Test__EnvironmentCompatible:
      anyOf:
      - items:
          type: string
        type: array
      - type: 'null'
    Test__EnvironmentMisc:
      anyOf:
      - $ref: '#/components/schemas/EnvironmentMisc'
      - type: 'null'
    Test__Id:
      type: string
    Test__LogExcerpt:
      anyOf:
      - type: string
      - type: 'null'
    Test__LogUrl:
      anyOf:
      - type: string
      - type: 'null'
    Test__Misc:
      anyOf:
      - type: object
      - items:
          type: object
        type: array
      - type: 'null'
    Test__OutputFiles:
      anyOf:
      - type: object
      - items:
          type: object
        type: array
      - type: 'null'
    Test__Path:
      anyOf:
      - type: string
      - type: 'null'
    Test__StartTime:
      anyOf:
      - format: date-time
        type: string
      - type: 'null'
    Test__Status:
      anyOf:
      - $ref: '#/components/schemas/DatabaseStatusValues'
      - type: 'null'
    Timestamp:
      format: date-time
      type: string
    Tree:
      properties:
        index:
          title: Index
          type: string
        tree_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Tree Name
        git_repository_branch:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Branch
        git_repository_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Url
        head_git_commit_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Head Git Commit Name
        head_git_commit_hash:
          anyOf:
          - type: string
          - type: 'null'
          title: Head Git Commit Hash
        head_git_commit_tag:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Head Git Commit Tag
        selected_commit_status:
          anyOf:
          - type: object
          - type: 'null'
          title: Selected Commit Status
        is_selected:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Selected
      required:
      - index
      - tree_name
      - git_repository_branch
      - git_repository_url
      - head_git_commit_name
      - head_git_commit_hash
      - head_git_commit_tag
      - selected_commit_status
      - is_selected
      title: Tree
      type: object
    TreeCommon:
      properties:
        hardware:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Hardware
        tree_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Tree Url
        git_commit_tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Git Commit Tags
      required:
      - hardware
      - tree_url
      - git_commit_tags
      title: TreeCommon
      type: object
    TreeDetailsBuildsResponse:
      properties:
        builds:
          items:
            $ref: '#/components/schemas/BuildHistoryItem'
          title: Builds
          type: array
      required:
      - builds
      title: TreeDetailsBuildsResponse
      type: object
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
