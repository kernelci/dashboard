openapi: 3.0.3
info:
  title: KernelCI Dashboard API
  version: 1.0.0
  description: API for the KernelCI dashboard
paths:
  /api/hardware/{hardware_id}:
    post:
      operationId: hardware_create
      parameters:
      - in: path
        name: hardware_id
        schema:
          type: string
        required: true
      tags:
      - hardware
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareDetailsFullResponse'
          description: ''
  /api/log-downloader/:
    get:
      operationId: log_downloader_retrieve
      tags:
      - log-downloader
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tree/:
    get:
      operationId: tree_list
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tree'
          description: ''
  /api/tree/{commit_hash}/boots:
    get:
      operationId: tree_boots_retrieve
      parameters:
      - in: path
        name: commit_hash
        schema:
          type: string
        required: true
      - in: query
        name: git_branch
        schema:
          title: Git Branch
          type: string
        required: true
      - in: query
        name: git_url
        schema:
          title: Git Url
          type: string
        required: true
      - in: query
        name: origin
        schema:
          default: maestro
          title: Origin
          type: string
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BootResponse'
          description: ''
  /api/tree/{commit_hash}/builds:
    get:
      operationId: tree_builds_retrieve
      parameters:
      - in: path
        name: commit_hash
        schema:
          type: string
        required: true
      - in: query
        name: git_branch
        schema:
          title: Git Branch
          type: string
        required: true
      - in: query
        name: git_url
        schema:
          title: Git Url
          type: string
        required: true
      - in: query
        name: origin
        schema:
          default: maestro
          title: Origin
          type: string
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildsResponse'
          description: ''
  /api/tree/{commit_hash}/commits:
    get:
      operationId: tree_commits_retrieve
      parameters:
      - in: path
        name: commit_hash
        schema:
          type: string
        required: true
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/tree/{commit_hash}/summary:
    get:
      operationId: tree_summary_retrieve
      parameters:
      - in: path
        name: commit_hash
        schema:
          type: string
        required: true
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryResponse'
          description: ''
  /api/tree/{commit_hash}/tests:
    get:
      operationId: tree_tests_retrieve
      parameters:
      - in: path
        name: commit_hash
        schema:
          type: string
        required: true
      - in: query
        name: git_branch
        schema:
          title: Git Branch
          type: string
        required: true
      - in: query
        name: git_url
        schema:
          title: Git Url
          type: string
        required: true
      - in: query
        name: origin
        schema:
          default: maestro
          title: Origin
          type: string
      tags:
      - tree
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponse'
          description: ''
components:
  schemas:
    BootResponse:
      properties:
        bootHistory:
          items:
            $ref: '#/components/schemas/TestHistoryItem'
          title: Boothistory
          type: array
      required:
      - bootHistory
      title: BootResponse
      type: object
    BuildArchitectures:
      properties:
        valid:
          title: Valid
          type: integer
        invalid:
          title: Invalid
          type: integer
        'null':
          title: 'Null'
          type: integer
        compilers:
          items:
            type: string
          title: Compilers
          type: array
      required:
      - valid
      - invalid
      - 'null'
      - compilers
      title: BuildArchitectures
      type: object
    BuildConfigs:
      properties:
        valid:
          title: Valid
          type: integer
        invalid:
          title: Invalid
          type: integer
        'null':
          title: 'Null'
          type: integer
      required:
      - valid
      - invalid
      - 'null'
      title: BuildConfigs
      type: object
    BuildHistoryItem:
      properties:
        id:
          title: Id
          type: string
        architecture:
          anyOf:
          - type: string
          - type: 'null'
          title: Architecture
        config_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Config Name
        misc:
          anyOf:
          - type: object
          - type: 'null'
          title: Misc
        config_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Config Url
        compiler:
          anyOf:
          - type: string
          - type: 'null'
          title: Compiler
        valid:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Valid
        duration:
          anyOf:
          - type: integer
          - type: number
          - type: 'null'
          title: Duration
        log_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Log Url
        start_time:
          anyOf:
          - format: date-time
            type: string
          - type: string
          - type: 'null'
          title: Start Time
        git_repository_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Url
        git_repository_branch:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Branch
      required:
      - id
      - architecture
      - config_name
      - misc
      - config_url
      - compiler
      - valid
      - duration
      - log_url
      - start_time
      - git_repository_url
      - git_repository_branch
      title: BuildHistoryItem
      type: object
    BuildStatusCount:
      properties:
        valid:
          title: Valid
          type: integer
        invalid:
          title: Invalid
          type: integer
        'null':
          title: 'Null'
          type: integer
      required:
      - valid
      - invalid
      - 'null'
      title: BuildStatusCount
      type: object
    BuildSummary:
      properties:
        status:
          $ref: '#/components/schemas/BuildStatusCount'
        architectures:
          additionalProperties:
            $ref: '#/components/schemas/BuildArchitectures'
          title: Architectures
          type: object
        configs:
          additionalProperties:
            $ref: '#/components/schemas/BuildConfigs'
          title: Configs
          type: object
        issues:
          items:
            $ref: '#/components/schemas/BuildsIssuesItem'
          title: Issues
          type: array
        unknown_issues:
          title: Unknown Issues
          type: integer
      required:
      - status
      - architectures
      - configs
      - issues
      - unknown_issues
      title: BuildSummary
      type: object
    BuildsIssuesItem:
      properties:
        id:
          title: Id
          type: string
        comment:
          anyOf:
          - type: string
          - type: 'null'
          title: Comment
        report_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Report Url
        incidents_info:
          $ref: '#/components/schemas/IncidentsInfo'
      required:
      - id
      - comment
      - report_url
      - incidents_info
      title: BuildsIssuesItem
      type: object
    BuildsResponse:
      properties:
        builds:
          items:
            $ref: '#/components/schemas/BuildHistoryItem'
          title: Builds
          type: array
      required:
      - builds
      title: BuildsResponse
      type: object
    HardwareDetailsFullResponse:
      properties:
        builds:
          items:
            $ref: '#/components/schemas/BuildHistoryItem'
          title: Builds
          type: array
        boots:
          items:
            $ref: '#/components/schemas/TestHistoryItem'
          title: Boots
          type: array
        tests:
          items:
            $ref: '#/components/schemas/TestHistoryItem'
          title: Tests
          type: array
        summary:
          $ref: '#/components/schemas/HardwareSummary'
      required:
      - builds
      - boots
      - tests
      - summary
      title: HardwareDetailsFullResponse
      type: object
    HardwareSummary:
      properties:
        builds:
          $ref: '#/components/schemas/BuildSummary'
        boots:
          $ref: '#/components/schemas/TestSummary'
        tests:
          $ref: '#/components/schemas/TestSummary'
        trees:
          items:
            $ref: '#/components/schemas/Tree'
          title: Trees
          type: array
        configs:
          items:
            type: string
          title: Configs
          type: array
        architectures:
          items:
            type: string
          title: Architectures
          type: array
        compilers:
          items:
            type: string
          title: Compilers
          type: array
        compatibles:
          items:
            type: string
          title: Compatibles
          type: array
      required:
      - builds
      - boots
      - tests
      - trees
      - configs
      - architectures
      - compilers
      - compatibles
      title: HardwareSummary
      type: object
    IncidentsInfo:
      properties:
        incidentsCount:
          title: Incidentscount
          type: integer
      required:
      - incidentsCount
      title: IncidentsInfo
      type: object
    Misc:
      properties:
        platform:
          title: Platform
          type: string
      required:
      - platform
      title: Misc
      type: object
    SummaryResponse:
      properties:
        summary:
          $ref: '#/components/schemas/TreeSummary'
      required:
      - summary
      title: SummaryResponse
      type: object
    TestArchSummaryItem:
      properties:
        arch:
          title: Arch
          type: string
        compiler:
          title: Compiler
          type: string
        status:
          $ref: '#/components/schemas/TestStatusCount'
      required:
      - arch
      - compiler
      - status
      title: TestArchSummaryItem
      type: object
    TestHistoryItem:
      properties:
        id:
          title: Id
          type: string
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
        duration:
          anyOf:
          - type: integer
          - type: number
          - type: 'null'
          title: Duration
        path:
          anyOf:
          - type: string
          - type: 'null'
          title: Path
        start_time:
          anyOf:
          - format: date-time
            type: string
          - type: string
          - type: 'null'
          title: Start Time
        environment_compatible:
          anyOf:
          - type: string
          - items:
              type: string
            type: array
          - type: 'null'
          title: Environment Compatible
        config:
          anyOf:
          - type: string
          - type: 'null'
          title: Config
        log_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Log Url
        architecture:
          anyOf:
          - type: string
          - type: 'null'
          title: Architecture
        compiler:
          anyOf:
          - type: string
          - type: 'null'
          title: Compiler
        misc:
          anyOf:
          - $ref: '#/components/schemas/Misc'
          - type: 'null'
      required:
      - id
      - status
      - duration
      - path
      - start_time
      - environment_compatible
      - config
      - log_url
      - architecture
      - compiler
      - misc
      title: TestHistoryItem
      type: object
    TestIssuesItem:
      properties:
        id:
          title: Id
          type: string
        comment:
          anyOf:
          - type: string
          - type: 'null'
          title: Comment
        report_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Report Url
        incidents_info:
          $ref: '#/components/schemas/IncidentsInfo'
      required:
      - id
      - comment
      - report_url
      - incidents_info
      title: TestIssuesItem
      type: object
    TestResponse:
      properties:
        testHistory:
          items:
            $ref: '#/components/schemas/TestHistoryItem'
          title: Testhistory
          type: array
      required:
      - testHistory
      title: TestResponse
      type: object
    TestStatusCount:
      properties:
        PASS:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Pass
        ERROR:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Error
        FAIL:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Fail
        SKIP:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Skip
        'NULL':
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: 'Null'
      title: TestStatusCount
      type: object
    TestSummary:
      properties:
        status:
          $ref: '#/components/schemas/TestStatusCount'
        architectures:
          items:
            $ref: '#/components/schemas/TestArchSummaryItem'
          title: Architectures
          type: array
        configs:
          additionalProperties:
            $ref: '#/components/schemas/TestStatusCount'
          title: Configs
          type: object
        issues:
          items:
            $ref: '#/components/schemas/TestIssuesItem'
          title: Issues
          type: array
        unknown_issues:
          title: Unknown Issues
          type: integer
        fail_reasons:
          additionalProperties:
            type: integer
          title: Fail Reasons
          type: object
        failed_platforms:
          items:
            type: string
          title: Failed Platforms
          type: array
        environment_compatible:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Environment Compatible
        environment_misc:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Environment Misc
        platforms:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/TestStatusCount'
            type: object
          - type: 'null'
          default: null
          title: Platforms
      required:
      - status
      - architectures
      - configs
      - issues
      - unknown_issues
      - fail_reasons
      - failed_platforms
      title: TestSummary
      type: object
    Tree:
      properties:
        index:
          title: Index
          type: string
        tree_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Tree Name
        git_repository_branch:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Branch
        git_repository_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Git Repository Url
        head_git_commit_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Head Git Commit Name
        head_git_commit_hash:
          anyOf:
          - type: string
          - type: 'null'
          title: Head Git Commit Hash
        head_git_commit_tag:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Head Git Commit Tag
        selected_commit_status:
          anyOf:
          - type: object
          - type: 'null'
          title: Selected Commit Status
      required:
      - index
      - tree_name
      - git_repository_branch
      - git_repository_url
      - head_git_commit_name
      - head_git_commit_hash
      - head_git_commit_tag
      - selected_commit_status
      title: Tree
      type: object
    TreeSummary:
      properties:
        builds:
          $ref: '#/components/schemas/BuildSummary'
        boots:
          $ref: '#/components/schemas/TestSummary'
        tests:
          $ref: '#/components/schemas/TestSummary'
        hardware:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Hardware
        tree_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Tree Url
        git_commit_tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Git Commit Tags
      required:
      - builds
      - boots
      - tests
      - hardware
      - tree_url
      - git_commit_tags
      title: TreeSummary
      type: object
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
