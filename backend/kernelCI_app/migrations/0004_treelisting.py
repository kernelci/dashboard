# Generated by Django 5.1.12 on 2025-10-10 19:06

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("kernelCI_app", "0003_add_build_series_field"),
    ]

    operations = [
        migrations.CreateModel(
            name="TreeListing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("field_timestamp", models.DateTimeField(db_column="_timestamp")),
                ("checkout_id", models.TextField()),
                ("origin", models.TextField()),
                ("tree_name", models.TextField(blank=True, null=True)),
                ("git_repository_url", models.TextField(blank=True, null=True)),
                ("git_repository_branch", models.TextField(blank=True, null=True)),
                ("git_commit_hash", models.TextField(blank=True, null=True)),
                ("git_commit_name", models.TextField(blank=True, null=True)),
                (
                    "git_commit_tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), size=None
                    ),
                ),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                (
                    "origin_builds_finish_time",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "origin_tests_finish_time",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("pass_builds", models.IntegerField(default=0)),
                ("fail_builds", models.IntegerField(default=0)),
                ("done_builds", models.IntegerField(default=0)),
                ("miss_builds", models.IntegerField(default=0)),
                ("skip_builds", models.IntegerField(default=0)),
                ("error_builds", models.IntegerField(default=0)),
                ("null_builds", models.IntegerField(default=0)),
                ("pass_boots", models.IntegerField(default=0)),
                ("fail_boots", models.IntegerField(default=0)),
                ("done_boots", models.IntegerField(default=0)),
                ("miss_boots", models.IntegerField(default=0)),
                ("skip_boots", models.IntegerField(default=0)),
                ("error_boots", models.IntegerField(default=0)),
                ("null_boots", models.IntegerField(default=0)),
                ("pass_tests", models.IntegerField(default=0)),
                ("fail_tests", models.IntegerField(default=0)),
                ("done_tests", models.IntegerField(default=0)),
                ("miss_tests", models.IntegerField(default=0)),
                ("skip_tests", models.IntegerField(default=0)),
                ("error_tests", models.IntegerField(default=0)),
                ("null_tests", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "tree_listing",
                "indexes": [
                    models.Index(fields=["start_time"], name="tree_listing_start_time"),
                    models.Index(fields=["origin"], name="tree_listing_origin"),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=(
                            "origin",
                            "tree_name",
                            "git_repository_url",
                            "git_repository_branch",
                        ),
                        name="unique_tree",
                    )
                ],
            },
        ),
    ]
