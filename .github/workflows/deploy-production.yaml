name: Deploy production Dashboard

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true
        default: 'main'

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "Deploying production Dashboard with tag `${{ github.event.inputs.tag }}`"

      - name: Configure host authenticity
        run: |
          mkdir -p ~/.ssh/ && chmod 700 ~/.ssh/
          touch ~/.ssh/known_hosts && chmod 600 ~/.ssh/known_hosts
          echo "$SSH_HOSTKEY" > ~/.ssh/known_hosts
        env:
          SSH_HOSTKEY: ${{ secrets.STAGING_HOSTKEY }}

      - name: Deploy production
        run: |
          eval $(ssh-agent -s)
          echo "$SSH_KEY" | ssh-add - >/dev/null
          ssh "${SSH_USER}@${SSH_HOST}" "./prod.sh ${{ github.event.inputs.tag }}"
        env:
          SSH_USER: ${{ secrets.STAGING_USER }}
          SSH_HOST: ${{ secrets.STAGING_HOST }}
          SSH_KEY: ${{ secrets.STAGING_KEY }}

      - name: Discord notification on success
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "Production Dashboard deployment successful with tag `${{ github.event.inputs.tag }}`"

      - name: Discord notification on failure
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "Production Dashboard deployment failed with tag `${{ github.event.inputs.tag }}`"
